{"version":3,"sources":["components/Editor2.js","components/App.js","reportWebVitals.js","index.js"],"names":["Editor","editor","useMemo","withReact","createEditor","useState","type","children","text","value","setValue","onChange","onKeyDown","event","key","preventDefault","insertText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAIe,SAASA,IACvB,IAAMC,EAASC,mBAAQ,kBAAMC,YAAUC,iBAAiB,IADxB,EAENC,mBAAS,CAClC,CACCC,KAAM,YACNC,SAAU,CAAC,CAAEC,KAAM,sCALW,mBAEzBC,EAFyB,KAElBC,EAFkB,KAShC,OACC,cAAC,IAAD,CAAOT,OAAQA,EAAQQ,MAAOA,EAAOE,SAAU,SAACF,GAAD,OAAWC,EAASD,IAAnE,SACC,cAAC,IAAD,CACCG,UAAW,SAACC,GACO,MAAdA,EAAMC,MACTD,EAAME,iBACNd,EAAOe,WAAW,aCfT,SAASC,IACvB,OACC,8BAEC,cAAC,EAAD,MCRH,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c81010d.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { createEditor } from 'slate'\r\nimport { Slate, Editable, withReact } from 'slate-react'\r\n\r\nexport default function Editor() {\r\n\tconst editor = useMemo(() => withReact(createEditor()), [])\r\n\tconst [value, setValue] = useState([\r\n\t\t{\r\n\t\t\ttype: 'paragraph',\r\n\t\t\tchildren: [{ text: 'A line of text in a paragraph.' }],\r\n\t\t},\r\n\t])\r\n\r\n\treturn (\r\n\t\t<Slate editor={editor} value={value} onChange={(value) => setValue(value)}>\r\n\t\t\t<Editable\r\n\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\tif (event.key === '&') {\r\n\t\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\t\teditor.insertText('and')\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Slate>\r\n\t)\r\n}\r\n","import React from 'react'\nimport Editor from '../components/Editor'\nimport Editor2 from '../components/Editor2'\n\nexport default function App() {\n\treturn (\n\t\t<div>\n\t\t\t{/* <Editor /> */}\n\t\t\t<Editor2/>\n\t\t</div>\n\t)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}